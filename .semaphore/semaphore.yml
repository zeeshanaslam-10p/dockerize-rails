version: v1.0
name: Docker
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
blocks:
  - name: Build
    task:
      jobs:
        - name: Build myapp
          commands:
            - 'docker pull $DOCKER_USERNAME/dockerize-rails-myapp:latest || true'
            - 'docker build -t $DOCKER_USERNAME/dockerize-rails-myapp:latest --cache-from=$DOCKER_USERNAME/dockerize-rails-myapp:latest -f Dockerfile.production .'
            - 'docker push $DOCKER_USERNAME/dockerize-rails-myapp:latest'
        - name: Build nginx
          commands:
            - 'docker pull $DOCKER_USERNAME/dockerize-rails-nginx:latest || true'
            - 'docker build -t $DOCKER_USERNAME/dockerize-rails-nginx:latest --cache-from=$DOCKER_USERNAME/dockerize-rails-nginx:latest -f Dockerfile.nginx .'
            - 'docker push $DOCKER_USERNAME/dockerize-rails-nginx:latest'
      secrets:
        - name: dockerize-rails
      prologue:
        commands:
          - checkout
          - 'echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin'
  - name: Tests
    task:
      secrets:
        - name: dockerize-rails
      prologue:
        commands:
          - 'checkout '
          - cp env-example .env
          - cat docker-compose.test.yml | envsubst | tee docker-compose.yml
          - 'echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin'
          - docker pull $DOCKER_USERNAME/dockerize-rails-myapp || true
          - 'docker-compose run myapp rake db:reset'
          - 'docker-compose run myapp rake db:migrate'
          - 'docker-compose run myapp rake db:test:prepare'
      jobs:
        - name: Rails Tests
          commands:
            - 'docker-compose run myapp rake db:test:prepare'
            - docker-compose run myapp rails test
